// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  name      String?
  role      UserRole @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  customer    Customer?
  employee    Employee?
  admin       Admin?
  invoices    Invoice[]

  @@map("users")
}

model Customer {
  id        String   @id @default(cuid())
  userId    String   @unique
  company   String?
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  packages  CustomerPackage[]
  invoices  Invoice[]

  @@map("customers")
}

model Employee {
  id        String   @id @default(cuid())
  userId    String   @unique
  hourlyRate Decimal @db.Decimal(10, 2)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  activities Activity[]

  @@map("employees")
}

model Admin {
  id        String   @id @default(cuid())
  userId    String   @unique
  permissions String[] // JSON array of permissions
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("admins")
}

model Package {
  id          String   @id @default(cuid())
  name        String   // MAAS-XS, MAAS-S, MAAS-M, MAAS-L, MAAS-XL, MAAS-XXL
  description String?
  maxHours    Int
  price       Decimal  @db.Decimal(10, 2)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  customerPackages CustomerPackage[]
  packageActivities PackageActivity[]

  @@map("packages")
}

model CustomerPackage {
  id          String   @id @default(cuid())
  customerId  String
  packageId   String
  startDate   DateTime
  endDate     DateTime?
  status      PackageStatus @default(ACTIVE)
  stripeSubscriptionId String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  package     Package  @relation(fields: [packageId], references: [id])
  activities  Activity[]

  @@map("customer_packages")
}

model Activity {
  id                String   @id @default(cuid())
  customerPackageId String
  employeeId        String
  description       String
  hours             Decimal  @db.Decimal(5, 2)
  date              DateTime
  status            ActivityStatus @default(PENDING)
  rompslompTaskId   String?  // External task ID from rompslomp.nl
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  customerPackage CustomerPackage @relation(fields: [customerPackageId], references: [id], onDelete: Cascade)
  employee        Employee        @relation(fields: [employeeId], references: [id])

  @@map("activities")
}

model Invoice {
  id          String   @id @default(cuid())
  customerId  String
  userId      String
  amount      Decimal  @db.Decimal(10, 2)
  status      InvoiceStatus @default(PENDING)
  stripeInvoiceId String?
  dueDate     DateTime
  paidAt      DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id])

  @@map("invoices")
}

// Nieuwe tabellen voor activiteitenlijsten
model ActivityTemplate {
  id          String   @id @default(cuid())
  name        String
  description String
  category    ActivityCategory
  estimatedHours Decimal @db.Decimal(5, 2)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  packageActivities PackageActivity[]

  @@map("activity_templates")
}

model PackageActivity {
  id                String   @id @default(cuid())
  packageId         String
  activityTemplateId String
  quantity          Int      @default(1)
  isIncluded        Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  package          Package         @relation(fields: [packageId], references: [id], onDelete: Cascade)
  activityTemplate ActivityTemplate @relation(fields: [activityTemplateId], references: [id])

  @@unique([packageId, activityTemplateId])
  @@map("package_activities")
}

enum UserRole {
  CUSTOMER
  EMPLOYEE
  ADMIN
}

enum PackageStatus {
  ACTIVE
  SUSPENDED
  CANCELLED
  EXPIRED
}

enum ActivityStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

enum InvoiceStatus {
  PENDING
  PAID
  OVERDUE
  CANCELLED
}

enum ActivityCategory {
  WEBSITE
  SOCIAL_MEDIA
  EMAIL_MARKETING
  DESIGN
  CONTENT
  SEO
  ANALYTICS
  CONSULTING
  TECHNICAL
  ADMINISTRATION
} 